import express from 'express';
import { isValidChatlinkPayload } from '../../types/apiTypes/chatlinkAPITypes';
import { addToPath } from '../../utils/fileFuncs';
import path from 'path';

export const routeDescriptions = [
	{
		path: '/server/chatlink',
		method: 'POST',
		description: 'Handles incoming chat link events.',
	},
];

const router = express.Router();

router.use((req, _res, next) => {
	next();
});

let lastReq: { body: any; formattedEvent: string } | null = null;

router.post('/server/chatlink', async (req, res) => {
	const { body } = req;
	if (!isValidChatlinkPayload(body)) {
		console.log('Invalid payload:', body);
		return res.status(400).json({ error: 'Invalid payload' });
	}

	const formattedEvent = String(req.body.EventId || '')
		.split('.')[2]
		?.replace(/^./, (c: any) => c.toLowerCase());
	const jsonPath = path.resolve(process.cwd(), './src/types/autogenerated', 'chatlinkEvents.json');
	addToPath(jsonPath, formattedEvent);

	if (lastReq && JSON.stringify(lastReq.body) === JSON.stringify(body)) return;

	const client = req.app.get('discordClient');
	client.emit(formattedEvent, body);

	lastReq = { body, formattedEvent };
	return res.status(200).json({ ok: true });
});

export default router;
